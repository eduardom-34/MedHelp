// <auto-generated />
using MedHelpApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedHelpApi.Migrations
{
    [DbContext(typeof(MedHelpContext))]
    [Migration("20240908035018_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedHelpApi.Models.Categories", b =>
                {
                    b.Property<int>("CategoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriesID"));

                    b.Property<string>("CategoriesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriesID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MedHelpApi.Models.Specialties", b =>
                {
                    b.Property<int>("SpecialtiesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtiesID"));

                    b.Property<int>("CategoriesID")
                        .HasColumnType("int");

                    b.Property<string>("SpecialtiesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialtiesName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialtiesID");

                    b.HasIndex("CategoriesID");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("MedHelpApi.Models.Specialties", b =>
                {
                    b.HasOne("MedHelpApi.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
